
class Solution {
  public:
   
   int fun(int val,int arr[],int k,int n,int &min1)
   {
      // val=arr[val];
      int s=0,max1=0;
       for(int i=0;i<n;i++)
       {
           s+=arr[i];
           if(arr[i]>val)
           return 1;
           if(s>val)
           {
               max1=max(max1,s-arr[i]);
               
               k--;
              s=arr[i];
           }
           
            if(s==val)
           {
               max1=max(max1,val);
               k--;
               s=0;
           }
       }
       if(s)
       {
           k--;
           max1=max(max1,s);
       }
       if(k==0)
       {
           min1=min(min1,max1);
           return 0;
       }
       else if(k>0)
       {
           min1=min(min1,max1);
           return 0;
       }
       else{
           return 1;
       }
   }
   
   
    int splitArray(int arr[] ,int n, int k) {
        // code here
        int i=0,j=accumulate(arr,arr+n,0),min1=INT_MAX;
        while(i<=j)
        {
            int mid=(i+j)/2;
            int a=fun(mid,arr,k,n,min1);
            if(a==1)
            i=mid+1;
            else{
                j=mid-1;
            }
           
            
          
        }
        return min1;
    }
};
