
class Solution {
public:
    int rec(int i, int j, vector<int> &arr, vector<vector<int>> &dp){
        
        // if(i == j) return a[i];
        if(i>j) return 0;
        
        if(dp[i][j] != -1) return dp[i][j];
        int maxi = 0;
        
        for(int k=i;k<=j;k++)
        {
            maxi = max(maxi, arr[i-1]*arr[k]*arr[j+1] + rec(i,k-1,arr,dp) + rec(k+1,j,arr,dp));
        }
           
        return dp[i][j] = maxi;
    }
    int maxCoins(int N, vector<int> &arr) {
        
        vector<vector<int>> dp(N+2,vector<int>(N+2,0));
        
        // vector<int> a;
        arr.push_back(1);
        arr.insert(arr.begin(),1);
        // for(int i =0 ;i<N;i++)
        // {
        //     a.push_back(arr[i]);
        // }
        // a.push_back(1);
        // return rec(1,N,arr,dp);
        for(int i=N;i>0;i--)
        {
            for(int j=i;j<=N;j++)
            {
                // if(i>j) continue;
                int maxi = 0;
                for(int k = i;k<=j;k++)
                {
                    maxi = max(maxi, arr[i-1]*arr[k]*arr[j+1] + dp[i][k-1] + dp[k+1][j]);
                }
                dp[i][j] = maxi;
            }
        }
        return dp[1][N];
        }
};
